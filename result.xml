<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="4" failures="0" skipped="0" tests="11" time="136.685" timestamp="2021-11-09T13:04:09.099030" hostname="fv-az124-279"><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_is_git_repo_list_available" time="12.801" /><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_should_open_create_new_repo" time="5.065" /><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_should_open_import_repo_page" time="4.897" /><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_should_open_hello_world_read_guide_page" time="1.610" /><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_should_create_repo_form_introduce_yourself_activity" time="9.144" /><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_open_explore_repos_dashboard_page" time="1.740" /><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_find_repo_by_exact_name_one_match" time="12.575" /><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_find_repo_by_partial_name_one_match" time="26.494"><error message="failed on setup with &quot;selenium.common.exceptions.TimeoutException: Message: &#10;Stacktrace:&#10;#0 0x55d882ec8f93 &lt;unknown&gt;&#10;#1 0x55d8829a3908 &lt;unknown&gt;&#10;#2 0x55d8829d966a &lt;unknown&gt;&#10;#3 0x55d882a0bff4 &lt;unknown&gt;&#10;#4 0x55d8829f6aad &lt;unknown&gt;&#10;#5 0x55d882a09c91 &lt;unknown&gt;&#10;#6 0x55d8829f6973 &lt;unknown&gt;&#10;#7 0x55d8829ccdf4 &lt;unknown&gt;&#10;#8 0x55d8829cdde5 &lt;unknown&gt;&#10;#9 0x55d882ef82be &lt;unknown&gt;&#10;#10 0x55d882f0dba0 &lt;unknown&gt;&#10;#11 0x55d882ef9215 &lt;unknown&gt;&#10;#12 0x55d882f0efe8 &lt;unknown&gt;&#10;#13 0x55d882eed9db &lt;unknown&gt;&#10;#14 0x55d882f2a218 &lt;unknown&gt;&#10;#15 0x55d882f2a398 &lt;unknown&gt;&#10;#16 0x55d882f456cd &lt;unknown&gt;&#10;#17 0x7f4f03058609 &lt;unknown&gt;&quot;">web_driver = &lt;selenium.webdriver.remote.webdriver.WebDriver (session="1c537fc23b9a05c31cd04daed796f61d")&gt;
github_dashboard_page = &lt;pages.github_pages.dashboard.github_dashboard_page.GitHubDashboardPage object at 0x7fcff40c2ee0&gt;
github_confirm_password_page = &lt;pages.github_pages.repository.settings.github_confirm_password_page.GitHubConfirmPasswordPage object at 0x7fcff40454c0&gt;

    @pytest.fixture()
    def delete_all_repos(web_driver, github_dashboard_page, github_confirm_password_page):
&gt;       delete_all_repos_on_dashboard(web_driver, github_dashboard_page, github_confirm_password_page)

tests/conftest.py:152: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:141: in delete_all_repos_on_dashboard
    github_dashboard_page.repositories_list.click_first_repo_on_repositories() \
pages/github_pages/repository/github_repo_main_page.py:20: in click_settings_tab
    self.settings_tab().click()
pages/github_pages/repository/github_repo_main_page.py:17: in settings_tab
    return self._wait_for_visible_element(self.SETTINGS_TAB, 5)
pages/base_page.py:16: in _wait_for_visible_element
    return WebDriverWait(self.driver, time_seconds).until(EC.visibility_of_element_located(by_locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="1c537fc23b9a05c31cd04daed796f61d")&gt;
method = &lt;function visibility_of_element_located.&lt;locals&gt;._predicate at 0x7fcff411e040&gt;
message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
        return value does not evaluate to ``False``.
    
        :param method: callable(WebDriver)
        :param message: optional message for :exc:`TimeoutException`
        :returns: the result of the last call to `method`
        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs
        """
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except InvalidSelectorException as e:
                raise e
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x55d882ec8f93 &lt;unknown&gt;
E       #1 0x55d8829a3908 &lt;unknown&gt;
E       #2 0x55d8829d966a &lt;unknown&gt;
E       #3 0x55d882a0bff4 &lt;unknown&gt;
E       #4 0x55d8829f6aad &lt;unknown&gt;
E       #5 0x55d882a09c91 &lt;unknown&gt;
E       #6 0x55d8829f6973 &lt;unknown&gt;
E       #7 0x55d8829ccdf4 &lt;unknown&gt;
E       #8 0x55d8829cdde5 &lt;unknown&gt;
E       #9 0x55d882ef82be &lt;unknown&gt;
E       #10 0x55d882f0dba0 &lt;unknown&gt;
E       #11 0x55d882ef9215 &lt;unknown&gt;
E       #12 0x55d882f0efe8 &lt;unknown&gt;
E       #13 0x55d882eed9db &lt;unknown&gt;
E       #14 0x55d882f2a218 &lt;unknown&gt;
E       #15 0x55d882f2a398 &lt;unknown&gt;
E       #16 0x55d882f456cd &lt;unknown&gt;
E       #17 0x7f4f03058609 &lt;unknown&gt;

../../../.local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:89: TimeoutException</error></testcase><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_find_repo_by_partial_name_multi_match" time="11.311"><error message="failed on setup with &quot;selenium.common.exceptions.TimeoutException: Message: &#10;Stacktrace:&#10;#0 0x55d882ec8f93 &lt;unknown&gt;&#10;#1 0x55d8829a3908 &lt;unknown&gt;&#10;#2 0x55d8829d966a &lt;unknown&gt;&#10;#3 0x55d882a0bff4 &lt;unknown&gt;&#10;#4 0x55d8829f6aad &lt;unknown&gt;&#10;#5 0x55d882a09c91 &lt;unknown&gt;&#10;#6 0x55d8829f6973 &lt;unknown&gt;&#10;#7 0x55d8829ccdf4 &lt;unknown&gt;&#10;#8 0x55d8829cdde5 &lt;unknown&gt;&#10;#9 0x55d882ef82be &lt;unknown&gt;&#10;#10 0x55d882f0dba0 &lt;unknown&gt;&#10;#11 0x55d882ef9215 &lt;unknown&gt;&#10;#12 0x55d882f0efe8 &lt;unknown&gt;&#10;#13 0x55d882eed9db &lt;unknown&gt;&#10;#14 0x55d882f2a218 &lt;unknown&gt;&#10;#15 0x55d882f2a398 &lt;unknown&gt;&#10;#16 0x55d882f456cd &lt;unknown&gt;&#10;#17 0x7f4f03058609 &lt;unknown&gt;&quot;">web_driver = &lt;selenium.webdriver.remote.webdriver.WebDriver (session="1c537fc23b9a05c31cd04daed796f61d")&gt;
github_dashboard_page = &lt;pages.github_pages.dashboard.github_dashboard_page.GitHubDashboardPage object at 0x7fcff40c2ee0&gt;
delete_all_repos = None

    @pytest.fixture()
    def create_repos_test_1_and_test_2(web_driver, github_dashboard_page, delete_all_repos):
        for i in range(1, 3):
&gt;           github_dashboard_page.open_url() \
                .repositories_list \
                .click_create_repository() \
                .input_repo_name(f"test_{i}") \
                .click_create_repository_button().settings_tab()

tests/conftest.py:175: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pages/github_pages/repository/github_repo_main_page.py:17: in settings_tab
    return self._wait_for_visible_element(self.SETTINGS_TAB, 5)
pages/base_page.py:16: in _wait_for_visible_element
    return WebDriverWait(self.driver, time_seconds).until(EC.visibility_of_element_located(by_locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="1c537fc23b9a05c31cd04daed796f61d")&gt;
method = &lt;function visibility_of_element_located.&lt;locals&gt;._predicate at 0x7fcff400baf0&gt;
message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
        return value does not evaluate to ``False``.
    
        :param method: callable(WebDriver)
        :param message: optional message for :exc:`TimeoutException`
        :returns: the result of the last call to `method`
        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs
        """
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except InvalidSelectorException as e:
                raise e
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x55d882ec8f93 &lt;unknown&gt;
E       #1 0x55d8829a3908 &lt;unknown&gt;
E       #2 0x55d8829d966a &lt;unknown&gt;
E       #3 0x55d882a0bff4 &lt;unknown&gt;
E       #4 0x55d8829f6aad &lt;unknown&gt;
E       #5 0x55d882a09c91 &lt;unknown&gt;
E       #6 0x55d8829f6973 &lt;unknown&gt;
E       #7 0x55d8829ccdf4 &lt;unknown&gt;
E       #8 0x55d8829cdde5 &lt;unknown&gt;
E       #9 0x55d882ef82be &lt;unknown&gt;
E       #10 0x55d882f0dba0 &lt;unknown&gt;
E       #11 0x55d882ef9215 &lt;unknown&gt;
E       #12 0x55d882f0efe8 &lt;unknown&gt;
E       #13 0x55d882eed9db &lt;unknown&gt;
E       #14 0x55d882f2a218 &lt;unknown&gt;
E       #15 0x55d882f2a398 &lt;unknown&gt;
E       #16 0x55d882f456cd &lt;unknown&gt;
E       #17 0x7f4f03058609 &lt;unknown&gt;

../../../.local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:89: TimeoutException</error></testcase><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_find_repo_by_partial_name_not_match" time="49.475"><error message="failed on setup with &quot;selenium.common.exceptions.TimeoutException: Message:&quot;">web_driver = &lt;selenium.webdriver.remote.webdriver.WebDriver (session="1c537fc23b9a05c31cd04daed796f61d")&gt;
github_dashboard_page = &lt;pages.github_pages.dashboard.github_dashboard_page.GitHubDashboardPage object at 0x7fcff40c2ee0&gt;
delete_all_repos = None

    @pytest.fixture()
    def create_repos_test_1_and_test_2(web_driver, github_dashboard_page, delete_all_repos):
        for i in range(1, 3):
&gt;           github_dashboard_page.open_url() \
                .repositories_list \
                .click_create_repository() \
                .input_repo_name(f"test_{i}") \
                .click_create_repository_button().settings_tab()

tests/conftest.py:175: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pages/github_pages/create/new/github_create_new_repo_page.py:22: in click_create_repository_button
    self.get_create_repository_button().click()
pages/github_pages/create/new/github_create_new_repo_page.py:19: in get_create_repository_button
    return super()._wait_for_clickable_element(self.CREATE_REPOSITORY_BUTTON, 10)
pages/base_page.py:19: in _wait_for_clickable_element
    return WebDriverWait(self.driver, time_seconds).until(EC.element_to_be_clickable(by_locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="1c537fc23b9a05c31cd04daed796f61d")&gt;
method = &lt;function element_to_be_clickable.&lt;locals&gt;._predicate at 0x7fcff41223a0&gt;
message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
        return value does not evaluate to ``False``.
    
        :param method: callable(WebDriver)
        :param message: optional message for :exc:`TimeoutException`
        :returns: the result of the last call to `method`
        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs
        """
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except InvalidSelectorException as e:
                raise e
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message:

../../../.local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:89: TimeoutException</error><error message="failed on teardown with &quot;selenium.common.exceptions.TimeoutException: Message: &#10;Stacktrace:&#10;#0 0x55d882ec8f93 &lt;unknown&gt;&#10;#1 0x55d8829a3908 &lt;unknown&gt;&#10;#2 0x55d8829d966a &lt;unknown&gt;&#10;#3 0x55d882a0bff4 &lt;unknown&gt;&#10;#4 0x55d8829f6aad &lt;unknown&gt;&#10;#5 0x55d882a09c91 &lt;unknown&gt;&#10;#6 0x55d8829f6973 &lt;unknown&gt;&#10;#7 0x55d8829ccdf4 &lt;unknown&gt;&#10;#8 0x55d8829cdde5 &lt;unknown&gt;&#10;#9 0x55d882ef82be &lt;unknown&gt;&#10;#10 0x55d882f0dba0 &lt;unknown&gt;&#10;#11 0x55d882ef9215 &lt;unknown&gt;&#10;#12 0x55d882f0efe8 &lt;unknown&gt;&#10;#13 0x55d882eed9db &lt;unknown&gt;&#10;#14 0x55d882f2a218 &lt;unknown&gt;&#10;#15 0x55d882f2a398 &lt;unknown&gt;&#10;#16 0x55d882f456cd &lt;unknown&gt;&#10;#17 0x7f4f03058609 &lt;unknown&gt;&quot;">web_driver = &lt;selenium.webdriver.remote.webdriver.WebDriver (session="1c537fc23b9a05c31cd04daed796f61d")&gt;
github_dashboard_page = &lt;pages.github_pages.dashboard.github_dashboard_page.GitHubDashboardPage object at 0x7fcff40c2ee0&gt;
github_confirm_password_page = &lt;pages.github_pages.repository.settings.github_confirm_password_page.GitHubConfirmPasswordPage object at 0x7fcff40454c0&gt;

    @pytest.fixture(scope="session")
    def delete_all_repos_after_all_tests(web_driver, github_dashboard_page, github_confirm_password_page):
        yield
&gt;       delete_all_repos_on_dashboard(web_driver, github_dashboard_page, github_confirm_password_page)

tests/conftest.py:158: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:141: in delete_all_repos_on_dashboard
    github_dashboard_page.repositories_list.click_first_repo_on_repositories() \
pages/github_pages/repository/settings/github_repo_settings_page.py:20: in click_options_side_setting
    self.options_side_setting().click()
pages/github_pages/repository/settings/github_repo_settings_page.py:17: in options_side_setting
    return self._wait_for_visible_element(self.OPTIONS_SIDE_SETTING, 10)
pages/base_page.py:16: in _wait_for_visible_element
    return WebDriverWait(self.driver, time_seconds).until(EC.visibility_of_element_located(by_locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="1c537fc23b9a05c31cd04daed796f61d")&gt;
method = &lt;function visibility_of_element_located.&lt;locals&gt;._predicate at 0x7fcff4122a60&gt;
message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
        return value does not evaluate to ``False``.
    
        :param method: callable(WebDriver)
        :param message: optional message for :exc:`TimeoutException`
        :returns: the result of the last call to `method`
        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs
        """
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except InvalidSelectorException as e:
                raise e
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x55d882ec8f93 &lt;unknown&gt;
E       #1 0x55d8829a3908 &lt;unknown&gt;
E       #2 0x55d8829d966a &lt;unknown&gt;
E       #3 0x55d882a0bff4 &lt;unknown&gt;
E       #4 0x55d8829f6aad &lt;unknown&gt;
E       #5 0x55d882a09c91 &lt;unknown&gt;
E       #6 0x55d8829f6973 &lt;unknown&gt;
E       #7 0x55d8829ccdf4 &lt;unknown&gt;
E       #8 0x55d8829cdde5 &lt;unknown&gt;
E       #9 0x55d882ef82be &lt;unknown&gt;
E       #10 0x55d882f0dba0 &lt;unknown&gt;
E       #11 0x55d882ef9215 &lt;unknown&gt;
E       #12 0x55d882f0efe8 &lt;unknown&gt;
E       #13 0x55d882eed9db &lt;unknown&gt;
E       #14 0x55d882f2a218 &lt;unknown&gt;
E       #15 0x55d882f2a398 &lt;unknown&gt;
E       #16 0x55d882f456cd &lt;unknown&gt;
E       #17 0x7f4f03058609 &lt;unknown&gt;

../../../.local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:89: TimeoutException</error></testcase></testsuite></testsuites>