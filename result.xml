<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="10" failures="0" skipped="0" tests="20" time="188.488" timestamp="2021-11-11T19:39:54.268201" hostname="fv-az77-740"><testcase classname="tests.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_name_author_should_match" time="20.707" /><testcase classname="tests.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_should_match_public_as_default" time="7.165" /><testcase classname="tests.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_should_match_clone_default_url" time="7.060" /><testcase classname="tests.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_should_match_license_file" time="11.619" /><testcase classname="tests.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_should_match_readme_file" time="10.247" /><testcase classname="tests.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_should_match_gitignore" time="11.160" /><testcase classname="tests.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_should_match_privacy_private" time="9.872" /><testcase classname="tests.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_should_not_create_if_name_exist" time="8.264" /><testcase classname="tests.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_should_description_match" time="10.587" /><testcase classname="tests.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_should_open_import_repo_page" time="1.010" /><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_is_git_repo_list_available" time="84.563"><error message="failed on setup with &quot;selenium.common.exceptions.TimeoutException: Message: &#10;Stacktrace:&#10;#0 0x556aa9d6df93 &lt;unknown&gt;&#10;#1 0x556aa9848908 &lt;unknown&gt;&#10;#2 0x556aa987e66a &lt;unknown&gt;&#10;#3 0x556aa98b0ff4 &lt;unknown&gt;&#10;#4 0x556aa989baad &lt;unknown&gt;&#10;#5 0x556aa98aec91 &lt;unknown&gt;&#10;#6 0x556aa989b973 &lt;unknown&gt;&#10;#7 0x556aa9871df4 &lt;unknown&gt;&#10;#8 0x556aa9872de5 &lt;unknown&gt;&#10;#9 0x556aa9d9d2be &lt;unknown&gt;&#10;#10 0x556aa9db2ba0 &lt;unknown&gt;&#10;#11 0x556aa9d9e215 &lt;unknown&gt;&#10;#12 0x556aa9db3fe8 &lt;unknown&gt;&#10;#13 0x556aa9d929db &lt;unknown&gt;&#10;#14 0x556aa9dcf218 &lt;unknown&gt;&#10;#15 0x556aa9dcf398 &lt;unknown&gt;&#10;#16 0x556aa9dea6cd &lt;unknown&gt;&#10;#17 0x7f8b22b99609 &lt;unknown&gt;&quot;">web_driver = &lt;selenium.webdriver.remote.webdriver.WebDriver (session="b5688be7284107006bd2b2f413b53f9c")&gt;
github_dashboard_page = &lt;pages.github_pages.dashboard.github_dashboard_page.GitHubDashboardPage object at 0x7feac769cee0&gt;
github_confirm_password_page = &lt;pages.github_pages.repository.settings.github_confirm_password_page.GitHubConfirmPasswordPage object at 0x7feac769cfd0&gt;

    @pytest.fixture(scope="class")
    def delete_all_repos_before_class(web_driver, github_dashboard_page, github_confirm_password_page):
&gt;       delete_all_repos_on_dashboard(web_driver, github_dashboard_page, github_confirm_password_page)

tests/conftest.py:170: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:154: in delete_all_repos_on_dashboard
    github_dashboard_page.repositories_list.click_first_repo_on_repositories() \
utilities/logger/test_logger/test_step.py:28: in impl
    params = func(*args, **kw)
pages/github_pages/repository/github_repo_main_page.py:46: in click_settings_tab
    self.settings_tab().click()
utilities/logger/test_logger/test_step.py:28: in impl
    params = func(*args, **kw)
pages/github_pages/repository/github_repo_main_page.py:42: in settings_tab
    return self._wait_for_visible_element(self.SETTINGS_TAB, 10)
pages/base_page.py:16: in _wait_for_visible_element
    return WebDriverWait(self.driver, time_seconds).until(EC.visibility_of_element_located(by_locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="b5688be7284107006bd2b2f413b53f9c")&gt;
method = &lt;function visibility_of_element_located.&lt;locals&gt;._predicate at 0x7feac76e8790&gt;
message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
        return value does not evaluate to ``False``.
    
        :param method: callable(WebDriver)
        :param message: optional message for :exc:`TimeoutException`
        :returns: the result of the last call to `method`
        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs
        """
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except InvalidSelectorException as e:
                raise e
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x556aa9d6df93 &lt;unknown&gt;
E       #1 0x556aa9848908 &lt;unknown&gt;
E       #2 0x556aa987e66a &lt;unknown&gt;
E       #3 0x556aa98b0ff4 &lt;unknown&gt;
E       #4 0x556aa989baad &lt;unknown&gt;
E       #5 0x556aa98aec91 &lt;unknown&gt;
E       #6 0x556aa989b973 &lt;unknown&gt;
E       #7 0x556aa9871df4 &lt;unknown&gt;
E       #8 0x556aa9872de5 &lt;unknown&gt;
E       #9 0x556aa9d9d2be &lt;unknown&gt;
E       #10 0x556aa9db2ba0 &lt;unknown&gt;
E       #11 0x556aa9d9e215 &lt;unknown&gt;
E       #12 0x556aa9db3fe8 &lt;unknown&gt;
E       #13 0x556aa9d929db &lt;unknown&gt;
E       #14 0x556aa9dcf218 &lt;unknown&gt;
E       #15 0x556aa9dcf398 &lt;unknown&gt;
E       #16 0x556aa9dea6cd &lt;unknown&gt;
E       #17 0x7f8b22b99609 &lt;unknown&gt;

../../../.local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:89: TimeoutException</error></testcase><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_should_open_create_new_repo" time="0.001"><error message="failed on setup with &quot;selenium.common.exceptions.TimeoutException: Message: &#10;Stacktrace:&#10;#0 0x556aa9d6df93 &lt;unknown&gt;&#10;#1 0x556aa9848908 &lt;unknown&gt;&#10;#2 0x556aa987e66a &lt;unknown&gt;&#10;#3 0x556aa98b0ff4 &lt;unknown&gt;&#10;#4 0x556aa989baad &lt;unknown&gt;&#10;#5 0x556aa98aec91 &lt;unknown&gt;&#10;#6 0x556aa989b973 &lt;unknown&gt;&#10;#7 0x556aa9871df4 &lt;unknown&gt;&#10;#8 0x556aa9872de5 &lt;unknown&gt;&#10;#9 0x556aa9d9d2be &lt;unknown&gt;&#10;#10 0x556aa9db2ba0 &lt;unknown&gt;&#10;#11 0x556aa9d9e215 &lt;unknown&gt;&#10;#12 0x556aa9db3fe8 &lt;unknown&gt;&#10;#13 0x556aa9d929db &lt;unknown&gt;&#10;#14 0x556aa9dcf218 &lt;unknown&gt;&#10;#15 0x556aa9dcf398 &lt;unknown&gt;&#10;#16 0x556aa9dea6cd &lt;unknown&gt;&#10;#17 0x7f8b22b99609 &lt;unknown&gt;&quot;">web_driver = &lt;selenium.webdriver.remote.webdriver.WebDriver (session="b5688be7284107006bd2b2f413b53f9c")&gt;
github_dashboard_page = &lt;pages.github_pages.dashboard.github_dashboard_page.GitHubDashboardPage object at 0x7feac769cee0&gt;
github_confirm_password_page = &lt;pages.github_pages.repository.settings.github_confirm_password_page.GitHubConfirmPasswordPage object at 0x7feac769cfd0&gt;

    @pytest.fixture(scope="class")
    def delete_all_repos_before_class(web_driver, github_dashboard_page, github_confirm_password_page):
&gt;       delete_all_repos_on_dashboard(web_driver, github_dashboard_page, github_confirm_password_page)

tests/conftest.py:170: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:154: in delete_all_repos_on_dashboard
    github_dashboard_page.repositories_list.click_first_repo_on_repositories() \
utilities/logger/test_logger/test_step.py:28: in impl
    params = func(*args, **kw)
pages/github_pages/repository/github_repo_main_page.py:46: in click_settings_tab
    self.settings_tab().click()
utilities/logger/test_logger/test_step.py:28: in impl
    params = func(*args, **kw)
pages/github_pages/repository/github_repo_main_page.py:42: in settings_tab
    return self._wait_for_visible_element(self.SETTINGS_TAB, 10)
pages/base_page.py:16: in _wait_for_visible_element
    return WebDriverWait(self.driver, time_seconds).until(EC.visibility_of_element_located(by_locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="b5688be7284107006bd2b2f413b53f9c")&gt;
method = &lt;function visibility_of_element_located.&lt;locals&gt;._predicate at 0x7feac76e8790&gt;
message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
        return value does not evaluate to ``False``.
    
        :param method: callable(WebDriver)
        :param message: optional message for :exc:`TimeoutException`
        :returns: the result of the last call to `method`
        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs
        """
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except InvalidSelectorException as e:
                raise e
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x556aa9d6df93 &lt;unknown&gt;
E       #1 0x556aa9848908 &lt;unknown&gt;
E       #2 0x556aa987e66a &lt;unknown&gt;
E       #3 0x556aa98b0ff4 &lt;unknown&gt;
E       #4 0x556aa989baad &lt;unknown&gt;
E       #5 0x556aa98aec91 &lt;unknown&gt;
E       #6 0x556aa989b973 &lt;unknown&gt;
E       #7 0x556aa9871df4 &lt;unknown&gt;
E       #8 0x556aa9872de5 &lt;unknown&gt;
E       #9 0x556aa9d9d2be &lt;unknown&gt;
E       #10 0x556aa9db2ba0 &lt;unknown&gt;
E       #11 0x556aa9d9e215 &lt;unknown&gt;
E       #12 0x556aa9db3fe8 &lt;unknown&gt;
E       #13 0x556aa9d929db &lt;unknown&gt;
E       #14 0x556aa9dcf218 &lt;unknown&gt;
E       #15 0x556aa9dcf398 &lt;unknown&gt;
E       #16 0x556aa9dea6cd &lt;unknown&gt;
E       #17 0x7f8b22b99609 &lt;unknown&gt;

../../../.local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:89: TimeoutException</error></testcase><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_should_open_import_repo_page" time="0.001"><error message="failed on setup with &quot;selenium.common.exceptions.TimeoutException: Message: &#10;Stacktrace:&#10;#0 0x556aa9d6df93 &lt;unknown&gt;&#10;#1 0x556aa9848908 &lt;unknown&gt;&#10;#2 0x556aa987e66a &lt;unknown&gt;&#10;#3 0x556aa98b0ff4 &lt;unknown&gt;&#10;#4 0x556aa989baad &lt;unknown&gt;&#10;#5 0x556aa98aec91 &lt;unknown&gt;&#10;#6 0x556aa989b973 &lt;unknown&gt;&#10;#7 0x556aa9871df4 &lt;unknown&gt;&#10;#8 0x556aa9872de5 &lt;unknown&gt;&#10;#9 0x556aa9d9d2be &lt;unknown&gt;&#10;#10 0x556aa9db2ba0 &lt;unknown&gt;&#10;#11 0x556aa9d9e215 &lt;unknown&gt;&#10;#12 0x556aa9db3fe8 &lt;unknown&gt;&#10;#13 0x556aa9d929db &lt;unknown&gt;&#10;#14 0x556aa9dcf218 &lt;unknown&gt;&#10;#15 0x556aa9dcf398 &lt;unknown&gt;&#10;#16 0x556aa9dea6cd &lt;unknown&gt;&#10;#17 0x7f8b22b99609 &lt;unknown&gt;&quot;">web_driver = &lt;selenium.webdriver.remote.webdriver.WebDriver (session="b5688be7284107006bd2b2f413b53f9c")&gt;
github_dashboard_page = &lt;pages.github_pages.dashboard.github_dashboard_page.GitHubDashboardPage object at 0x7feac769cee0&gt;
github_confirm_password_page = &lt;pages.github_pages.repository.settings.github_confirm_password_page.GitHubConfirmPasswordPage object at 0x7feac769cfd0&gt;

    @pytest.fixture(scope="class")
    def delete_all_repos_before_class(web_driver, github_dashboard_page, github_confirm_password_page):
&gt;       delete_all_repos_on_dashboard(web_driver, github_dashboard_page, github_confirm_password_page)

tests/conftest.py:170: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:154: in delete_all_repos_on_dashboard
    github_dashboard_page.repositories_list.click_first_repo_on_repositories() \
utilities/logger/test_logger/test_step.py:28: in impl
    params = func(*args, **kw)
pages/github_pages/repository/github_repo_main_page.py:46: in click_settings_tab
    self.settings_tab().click()
utilities/logger/test_logger/test_step.py:28: in impl
    params = func(*args, **kw)
pages/github_pages/repository/github_repo_main_page.py:42: in settings_tab
    return self._wait_for_visible_element(self.SETTINGS_TAB, 10)
pages/base_page.py:16: in _wait_for_visible_element
    return WebDriverWait(self.driver, time_seconds).until(EC.visibility_of_element_located(by_locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="b5688be7284107006bd2b2f413b53f9c")&gt;
method = &lt;function visibility_of_element_located.&lt;locals&gt;._predicate at 0x7feac76e8790&gt;
message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
        return value does not evaluate to ``False``.
    
        :param method: callable(WebDriver)
        :param message: optional message for :exc:`TimeoutException`
        :returns: the result of the last call to `method`
        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs
        """
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except InvalidSelectorException as e:
                raise e
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x556aa9d6df93 &lt;unknown&gt;
E       #1 0x556aa9848908 &lt;unknown&gt;
E       #2 0x556aa987e66a &lt;unknown&gt;
E       #3 0x556aa98b0ff4 &lt;unknown&gt;
E       #4 0x556aa989baad &lt;unknown&gt;
E       #5 0x556aa98aec91 &lt;unknown&gt;
E       #6 0x556aa989b973 &lt;unknown&gt;
E       #7 0x556aa9871df4 &lt;unknown&gt;
E       #8 0x556aa9872de5 &lt;unknown&gt;
E       #9 0x556aa9d9d2be &lt;unknown&gt;
E       #10 0x556aa9db2ba0 &lt;unknown&gt;
E       #11 0x556aa9d9e215 &lt;unknown&gt;
E       #12 0x556aa9db3fe8 &lt;unknown&gt;
E       #13 0x556aa9d929db &lt;unknown&gt;
E       #14 0x556aa9dcf218 &lt;unknown&gt;
E       #15 0x556aa9dcf398 &lt;unknown&gt;
E       #16 0x556aa9dea6cd &lt;unknown&gt;
E       #17 0x7f8b22b99609 &lt;unknown&gt;

../../../.local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:89: TimeoutException</error></testcase><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_should_open_hello_world_read_guide_page" time="0.001"><error message="failed on setup with &quot;selenium.common.exceptions.TimeoutException: Message: &#10;Stacktrace:&#10;#0 0x556aa9d6df93 &lt;unknown&gt;&#10;#1 0x556aa9848908 &lt;unknown&gt;&#10;#2 0x556aa987e66a &lt;unknown&gt;&#10;#3 0x556aa98b0ff4 &lt;unknown&gt;&#10;#4 0x556aa989baad &lt;unknown&gt;&#10;#5 0x556aa98aec91 &lt;unknown&gt;&#10;#6 0x556aa989b973 &lt;unknown&gt;&#10;#7 0x556aa9871df4 &lt;unknown&gt;&#10;#8 0x556aa9872de5 &lt;unknown&gt;&#10;#9 0x556aa9d9d2be &lt;unknown&gt;&#10;#10 0x556aa9db2ba0 &lt;unknown&gt;&#10;#11 0x556aa9d9e215 &lt;unknown&gt;&#10;#12 0x556aa9db3fe8 &lt;unknown&gt;&#10;#13 0x556aa9d929db &lt;unknown&gt;&#10;#14 0x556aa9dcf218 &lt;unknown&gt;&#10;#15 0x556aa9dcf398 &lt;unknown&gt;&#10;#16 0x556aa9dea6cd &lt;unknown&gt;&#10;#17 0x7f8b22b99609 &lt;unknown&gt;&quot;">web_driver = &lt;selenium.webdriver.remote.webdriver.WebDriver (session="b5688be7284107006bd2b2f413b53f9c")&gt;
github_dashboard_page = &lt;pages.github_pages.dashboard.github_dashboard_page.GitHubDashboardPage object at 0x7feac769cee0&gt;
github_confirm_password_page = &lt;pages.github_pages.repository.settings.github_confirm_password_page.GitHubConfirmPasswordPage object at 0x7feac769cfd0&gt;

    @pytest.fixture(scope="class")
    def delete_all_repos_before_class(web_driver, github_dashboard_page, github_confirm_password_page):
&gt;       delete_all_repos_on_dashboard(web_driver, github_dashboard_page, github_confirm_password_page)

tests/conftest.py:170: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:154: in delete_all_repos_on_dashboard
    github_dashboard_page.repositories_list.click_first_repo_on_repositories() \
utilities/logger/test_logger/test_step.py:28: in impl
    params = func(*args, **kw)
pages/github_pages/repository/github_repo_main_page.py:46: in click_settings_tab
    self.settings_tab().click()
utilities/logger/test_logger/test_step.py:28: in impl
    params = func(*args, **kw)
pages/github_pages/repository/github_repo_main_page.py:42: in settings_tab
    return self._wait_for_visible_element(self.SETTINGS_TAB, 10)
pages/base_page.py:16: in _wait_for_visible_element
    return WebDriverWait(self.driver, time_seconds).until(EC.visibility_of_element_located(by_locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="b5688be7284107006bd2b2f413b53f9c")&gt;
method = &lt;function visibility_of_element_located.&lt;locals&gt;._predicate at 0x7feac76e8790&gt;
message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
        return value does not evaluate to ``False``.
    
        :param method: callable(WebDriver)
        :param message: optional message for :exc:`TimeoutException`
        :returns: the result of the last call to `method`
        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs
        """
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except InvalidSelectorException as e:
                raise e
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x556aa9d6df93 &lt;unknown&gt;
E       #1 0x556aa9848908 &lt;unknown&gt;
E       #2 0x556aa987e66a &lt;unknown&gt;
E       #3 0x556aa98b0ff4 &lt;unknown&gt;
E       #4 0x556aa989baad &lt;unknown&gt;
E       #5 0x556aa98aec91 &lt;unknown&gt;
E       #6 0x556aa989b973 &lt;unknown&gt;
E       #7 0x556aa9871df4 &lt;unknown&gt;
E       #8 0x556aa9872de5 &lt;unknown&gt;
E       #9 0x556aa9d9d2be &lt;unknown&gt;
E       #10 0x556aa9db2ba0 &lt;unknown&gt;
E       #11 0x556aa9d9e215 &lt;unknown&gt;
E       #12 0x556aa9db3fe8 &lt;unknown&gt;
E       #13 0x556aa9d929db &lt;unknown&gt;
E       #14 0x556aa9dcf218 &lt;unknown&gt;
E       #15 0x556aa9dcf398 &lt;unknown&gt;
E       #16 0x556aa9dea6cd &lt;unknown&gt;
E       #17 0x7f8b22b99609 &lt;unknown&gt;

../../../.local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:89: TimeoutException</error></testcase><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_should_create_repo_form_introduce_yourself_activity" time="0.001"><error message="failed on setup with &quot;selenium.common.exceptions.TimeoutException: Message: &#10;Stacktrace:&#10;#0 0x556aa9d6df93 &lt;unknown&gt;&#10;#1 0x556aa9848908 &lt;unknown&gt;&#10;#2 0x556aa987e66a &lt;unknown&gt;&#10;#3 0x556aa98b0ff4 &lt;unknown&gt;&#10;#4 0x556aa989baad &lt;unknown&gt;&#10;#5 0x556aa98aec91 &lt;unknown&gt;&#10;#6 0x556aa989b973 &lt;unknown&gt;&#10;#7 0x556aa9871df4 &lt;unknown&gt;&#10;#8 0x556aa9872de5 &lt;unknown&gt;&#10;#9 0x556aa9d9d2be &lt;unknown&gt;&#10;#10 0x556aa9db2ba0 &lt;unknown&gt;&#10;#11 0x556aa9d9e215 &lt;unknown&gt;&#10;#12 0x556aa9db3fe8 &lt;unknown&gt;&#10;#13 0x556aa9d929db &lt;unknown&gt;&#10;#14 0x556aa9dcf218 &lt;unknown&gt;&#10;#15 0x556aa9dcf398 &lt;unknown&gt;&#10;#16 0x556aa9dea6cd &lt;unknown&gt;&#10;#17 0x7f8b22b99609 &lt;unknown&gt;&quot;">web_driver = &lt;selenium.webdriver.remote.webdriver.WebDriver (session="b5688be7284107006bd2b2f413b53f9c")&gt;
github_dashboard_page = &lt;pages.github_pages.dashboard.github_dashboard_page.GitHubDashboardPage object at 0x7feac769cee0&gt;
github_confirm_password_page = &lt;pages.github_pages.repository.settings.github_confirm_password_page.GitHubConfirmPasswordPage object at 0x7feac769cfd0&gt;

    @pytest.fixture(scope="class")
    def delete_all_repos_before_class(web_driver, github_dashboard_page, github_confirm_password_page):
&gt;       delete_all_repos_on_dashboard(web_driver, github_dashboard_page, github_confirm_password_page)

tests/conftest.py:170: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:154: in delete_all_repos_on_dashboard
    github_dashboard_page.repositories_list.click_first_repo_on_repositories() \
utilities/logger/test_logger/test_step.py:28: in impl
    params = func(*args, **kw)
pages/github_pages/repository/github_repo_main_page.py:46: in click_settings_tab
    self.settings_tab().click()
utilities/logger/test_logger/test_step.py:28: in impl
    params = func(*args, **kw)
pages/github_pages/repository/github_repo_main_page.py:42: in settings_tab
    return self._wait_for_visible_element(self.SETTINGS_TAB, 10)
pages/base_page.py:16: in _wait_for_visible_element
    return WebDriverWait(self.driver, time_seconds).until(EC.visibility_of_element_located(by_locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="b5688be7284107006bd2b2f413b53f9c")&gt;
method = &lt;function visibility_of_element_located.&lt;locals&gt;._predicate at 0x7feac76e8790&gt;
message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
        return value does not evaluate to ``False``.
    
        :param method: callable(WebDriver)
        :param message: optional message for :exc:`TimeoutException`
        :returns: the result of the last call to `method`
        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs
        """
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except InvalidSelectorException as e:
                raise e
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x556aa9d6df93 &lt;unknown&gt;
E       #1 0x556aa9848908 &lt;unknown&gt;
E       #2 0x556aa987e66a &lt;unknown&gt;
E       #3 0x556aa98b0ff4 &lt;unknown&gt;
E       #4 0x556aa989baad &lt;unknown&gt;
E       #5 0x556aa98aec91 &lt;unknown&gt;
E       #6 0x556aa989b973 &lt;unknown&gt;
E       #7 0x556aa9871df4 &lt;unknown&gt;
E       #8 0x556aa9872de5 &lt;unknown&gt;
E       #9 0x556aa9d9d2be &lt;unknown&gt;
E       #10 0x556aa9db2ba0 &lt;unknown&gt;
E       #11 0x556aa9d9e215 &lt;unknown&gt;
E       #12 0x556aa9db3fe8 &lt;unknown&gt;
E       #13 0x556aa9d929db &lt;unknown&gt;
E       #14 0x556aa9dcf218 &lt;unknown&gt;
E       #15 0x556aa9dcf398 &lt;unknown&gt;
E       #16 0x556aa9dea6cd &lt;unknown&gt;
E       #17 0x7f8b22b99609 &lt;unknown&gt;

../../../.local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:89: TimeoutException</error></testcase><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_open_explore_repos_dashboard_page" time="0.001"><error message="failed on setup with &quot;selenium.common.exceptions.TimeoutException: Message: &#10;Stacktrace:&#10;#0 0x556aa9d6df93 &lt;unknown&gt;&#10;#1 0x556aa9848908 &lt;unknown&gt;&#10;#2 0x556aa987e66a &lt;unknown&gt;&#10;#3 0x556aa98b0ff4 &lt;unknown&gt;&#10;#4 0x556aa989baad &lt;unknown&gt;&#10;#5 0x556aa98aec91 &lt;unknown&gt;&#10;#6 0x556aa989b973 &lt;unknown&gt;&#10;#7 0x556aa9871df4 &lt;unknown&gt;&#10;#8 0x556aa9872de5 &lt;unknown&gt;&#10;#9 0x556aa9d9d2be &lt;unknown&gt;&#10;#10 0x556aa9db2ba0 &lt;unknown&gt;&#10;#11 0x556aa9d9e215 &lt;unknown&gt;&#10;#12 0x556aa9db3fe8 &lt;unknown&gt;&#10;#13 0x556aa9d929db &lt;unknown&gt;&#10;#14 0x556aa9dcf218 &lt;unknown&gt;&#10;#15 0x556aa9dcf398 &lt;unknown&gt;&#10;#16 0x556aa9dea6cd &lt;unknown&gt;&#10;#17 0x7f8b22b99609 &lt;unknown&gt;&quot;">web_driver = &lt;selenium.webdriver.remote.webdriver.WebDriver (session="b5688be7284107006bd2b2f413b53f9c")&gt;
github_dashboard_page = &lt;pages.github_pages.dashboard.github_dashboard_page.GitHubDashboardPage object at 0x7feac769cee0&gt;
github_confirm_password_page = &lt;pages.github_pages.repository.settings.github_confirm_password_page.GitHubConfirmPasswordPage object at 0x7feac769cfd0&gt;

    @pytest.fixture(scope="class")
    def delete_all_repos_before_class(web_driver, github_dashboard_page, github_confirm_password_page):
&gt;       delete_all_repos_on_dashboard(web_driver, github_dashboard_page, github_confirm_password_page)

tests/conftest.py:170: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:154: in delete_all_repos_on_dashboard
    github_dashboard_page.repositories_list.click_first_repo_on_repositories() \
utilities/logger/test_logger/test_step.py:28: in impl
    params = func(*args, **kw)
pages/github_pages/repository/github_repo_main_page.py:46: in click_settings_tab
    self.settings_tab().click()
utilities/logger/test_logger/test_step.py:28: in impl
    params = func(*args, **kw)
pages/github_pages/repository/github_repo_main_page.py:42: in settings_tab
    return self._wait_for_visible_element(self.SETTINGS_TAB, 10)
pages/base_page.py:16: in _wait_for_visible_element
    return WebDriverWait(self.driver, time_seconds).until(EC.visibility_of_element_located(by_locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="b5688be7284107006bd2b2f413b53f9c")&gt;
method = &lt;function visibility_of_element_located.&lt;locals&gt;._predicate at 0x7feac76e8790&gt;
message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
        return value does not evaluate to ``False``.
    
        :param method: callable(WebDriver)
        :param message: optional message for :exc:`TimeoutException`
        :returns: the result of the last call to `method`
        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs
        """
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except InvalidSelectorException as e:
                raise e
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x556aa9d6df93 &lt;unknown&gt;
E       #1 0x556aa9848908 &lt;unknown&gt;
E       #2 0x556aa987e66a &lt;unknown&gt;
E       #3 0x556aa98b0ff4 &lt;unknown&gt;
E       #4 0x556aa989baad &lt;unknown&gt;
E       #5 0x556aa98aec91 &lt;unknown&gt;
E       #6 0x556aa989b973 &lt;unknown&gt;
E       #7 0x556aa9871df4 &lt;unknown&gt;
E       #8 0x556aa9872de5 &lt;unknown&gt;
E       #9 0x556aa9d9d2be &lt;unknown&gt;
E       #10 0x556aa9db2ba0 &lt;unknown&gt;
E       #11 0x556aa9d9e215 &lt;unknown&gt;
E       #12 0x556aa9db3fe8 &lt;unknown&gt;
E       #13 0x556aa9d929db &lt;unknown&gt;
E       #14 0x556aa9dcf218 &lt;unknown&gt;
E       #15 0x556aa9dcf398 &lt;unknown&gt;
E       #16 0x556aa9dea6cd &lt;unknown&gt;
E       #17 0x7f8b22b99609 &lt;unknown&gt;

../../../.local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:89: TimeoutException</error></testcase><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_find_repo_by_exact_name_one_match" time="0.001"><error message="failed on setup with &quot;selenium.common.exceptions.TimeoutException: Message: &#10;Stacktrace:&#10;#0 0x556aa9d6df93 &lt;unknown&gt;&#10;#1 0x556aa9848908 &lt;unknown&gt;&#10;#2 0x556aa987e66a &lt;unknown&gt;&#10;#3 0x556aa98b0ff4 &lt;unknown&gt;&#10;#4 0x556aa989baad &lt;unknown&gt;&#10;#5 0x556aa98aec91 &lt;unknown&gt;&#10;#6 0x556aa989b973 &lt;unknown&gt;&#10;#7 0x556aa9871df4 &lt;unknown&gt;&#10;#8 0x556aa9872de5 &lt;unknown&gt;&#10;#9 0x556aa9d9d2be &lt;unknown&gt;&#10;#10 0x556aa9db2ba0 &lt;unknown&gt;&#10;#11 0x556aa9d9e215 &lt;unknown&gt;&#10;#12 0x556aa9db3fe8 &lt;unknown&gt;&#10;#13 0x556aa9d929db &lt;unknown&gt;&#10;#14 0x556aa9dcf218 &lt;unknown&gt;&#10;#15 0x556aa9dcf398 &lt;unknown&gt;&#10;#16 0x556aa9dea6cd &lt;unknown&gt;&#10;#17 0x7f8b22b99609 &lt;unknown&gt;&quot;">web_driver = &lt;selenium.webdriver.remote.webdriver.WebDriver (session="b5688be7284107006bd2b2f413b53f9c")&gt;
github_dashboard_page = &lt;pages.github_pages.dashboard.github_dashboard_page.GitHubDashboardPage object at 0x7feac769cee0&gt;
github_confirm_password_page = &lt;pages.github_pages.repository.settings.github_confirm_password_page.GitHubConfirmPasswordPage object at 0x7feac769cfd0&gt;

    @pytest.fixture(scope="class")
    def delete_all_repos_before_class(web_driver, github_dashboard_page, github_confirm_password_page):
&gt;       delete_all_repos_on_dashboard(web_driver, github_dashboard_page, github_confirm_password_page)

tests/conftest.py:170: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:154: in delete_all_repos_on_dashboard
    github_dashboard_page.repositories_list.click_first_repo_on_repositories() \
utilities/logger/test_logger/test_step.py:28: in impl
    params = func(*args, **kw)
pages/github_pages/repository/github_repo_main_page.py:46: in click_settings_tab
    self.settings_tab().click()
utilities/logger/test_logger/test_step.py:28: in impl
    params = func(*args, **kw)
pages/github_pages/repository/github_repo_main_page.py:42: in settings_tab
    return self._wait_for_visible_element(self.SETTINGS_TAB, 10)
pages/base_page.py:16: in _wait_for_visible_element
    return WebDriverWait(self.driver, time_seconds).until(EC.visibility_of_element_located(by_locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="b5688be7284107006bd2b2f413b53f9c")&gt;
method = &lt;function visibility_of_element_located.&lt;locals&gt;._predicate at 0x7feac76e8790&gt;
message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
        return value does not evaluate to ``False``.
    
        :param method: callable(WebDriver)
        :param message: optional message for :exc:`TimeoutException`
        :returns: the result of the last call to `method`
        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs
        """
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except InvalidSelectorException as e:
                raise e
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x556aa9d6df93 &lt;unknown&gt;
E       #1 0x556aa9848908 &lt;unknown&gt;
E       #2 0x556aa987e66a &lt;unknown&gt;
E       #3 0x556aa98b0ff4 &lt;unknown&gt;
E       #4 0x556aa989baad &lt;unknown&gt;
E       #5 0x556aa98aec91 &lt;unknown&gt;
E       #6 0x556aa989b973 &lt;unknown&gt;
E       #7 0x556aa9871df4 &lt;unknown&gt;
E       #8 0x556aa9872de5 &lt;unknown&gt;
E       #9 0x556aa9d9d2be &lt;unknown&gt;
E       #10 0x556aa9db2ba0 &lt;unknown&gt;
E       #11 0x556aa9d9e215 &lt;unknown&gt;
E       #12 0x556aa9db3fe8 &lt;unknown&gt;
E       #13 0x556aa9d929db &lt;unknown&gt;
E       #14 0x556aa9dcf218 &lt;unknown&gt;
E       #15 0x556aa9dcf398 &lt;unknown&gt;
E       #16 0x556aa9dea6cd &lt;unknown&gt;
E       #17 0x7f8b22b99609 &lt;unknown&gt;

../../../.local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:89: TimeoutException</error></testcase><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_find_repo_by_partial_name_one_match" time="0.001"><error message="failed on setup with &quot;selenium.common.exceptions.TimeoutException: Message: &#10;Stacktrace:&#10;#0 0x556aa9d6df93 &lt;unknown&gt;&#10;#1 0x556aa9848908 &lt;unknown&gt;&#10;#2 0x556aa987e66a &lt;unknown&gt;&#10;#3 0x556aa98b0ff4 &lt;unknown&gt;&#10;#4 0x556aa989baad &lt;unknown&gt;&#10;#5 0x556aa98aec91 &lt;unknown&gt;&#10;#6 0x556aa989b973 &lt;unknown&gt;&#10;#7 0x556aa9871df4 &lt;unknown&gt;&#10;#8 0x556aa9872de5 &lt;unknown&gt;&#10;#9 0x556aa9d9d2be &lt;unknown&gt;&#10;#10 0x556aa9db2ba0 &lt;unknown&gt;&#10;#11 0x556aa9d9e215 &lt;unknown&gt;&#10;#12 0x556aa9db3fe8 &lt;unknown&gt;&#10;#13 0x556aa9d929db &lt;unknown&gt;&#10;#14 0x556aa9dcf218 &lt;unknown&gt;&#10;#15 0x556aa9dcf398 &lt;unknown&gt;&#10;#16 0x556aa9dea6cd &lt;unknown&gt;&#10;#17 0x7f8b22b99609 &lt;unknown&gt;&quot;">web_driver = &lt;selenium.webdriver.remote.webdriver.WebDriver (session="b5688be7284107006bd2b2f413b53f9c")&gt;
github_dashboard_page = &lt;pages.github_pages.dashboard.github_dashboard_page.GitHubDashboardPage object at 0x7feac769cee0&gt;
github_confirm_password_page = &lt;pages.github_pages.repository.settings.github_confirm_password_page.GitHubConfirmPasswordPage object at 0x7feac769cfd0&gt;

    @pytest.fixture(scope="class")
    def delete_all_repos_before_class(web_driver, github_dashboard_page, github_confirm_password_page):
&gt;       delete_all_repos_on_dashboard(web_driver, github_dashboard_page, github_confirm_password_page)

tests/conftest.py:170: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:154: in delete_all_repos_on_dashboard
    github_dashboard_page.repositories_list.click_first_repo_on_repositories() \
utilities/logger/test_logger/test_step.py:28: in impl
    params = func(*args, **kw)
pages/github_pages/repository/github_repo_main_page.py:46: in click_settings_tab
    self.settings_tab().click()
utilities/logger/test_logger/test_step.py:28: in impl
    params = func(*args, **kw)
pages/github_pages/repository/github_repo_main_page.py:42: in settings_tab
    return self._wait_for_visible_element(self.SETTINGS_TAB, 10)
pages/base_page.py:16: in _wait_for_visible_element
    return WebDriverWait(self.driver, time_seconds).until(EC.visibility_of_element_located(by_locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="b5688be7284107006bd2b2f413b53f9c")&gt;
method = &lt;function visibility_of_element_located.&lt;locals&gt;._predicate at 0x7feac76e8790&gt;
message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
        return value does not evaluate to ``False``.
    
        :param method: callable(WebDriver)
        :param message: optional message for :exc:`TimeoutException`
        :returns: the result of the last call to `method`
        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs
        """
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except InvalidSelectorException as e:
                raise e
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x556aa9d6df93 &lt;unknown&gt;
E       #1 0x556aa9848908 &lt;unknown&gt;
E       #2 0x556aa987e66a &lt;unknown&gt;
E       #3 0x556aa98b0ff4 &lt;unknown&gt;
E       #4 0x556aa989baad &lt;unknown&gt;
E       #5 0x556aa98aec91 &lt;unknown&gt;
E       #6 0x556aa989b973 &lt;unknown&gt;
E       #7 0x556aa9871df4 &lt;unknown&gt;
E       #8 0x556aa9872de5 &lt;unknown&gt;
E       #9 0x556aa9d9d2be &lt;unknown&gt;
E       #10 0x556aa9db2ba0 &lt;unknown&gt;
E       #11 0x556aa9d9e215 &lt;unknown&gt;
E       #12 0x556aa9db3fe8 &lt;unknown&gt;
E       #13 0x556aa9d929db &lt;unknown&gt;
E       #14 0x556aa9dcf218 &lt;unknown&gt;
E       #15 0x556aa9dcf398 &lt;unknown&gt;
E       #16 0x556aa9dea6cd &lt;unknown&gt;
E       #17 0x7f8b22b99609 &lt;unknown&gt;

../../../.local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:89: TimeoutException</error></testcase><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_find_repo_by_partial_name_multi_match" time="0.001"><error message="failed on setup with &quot;selenium.common.exceptions.TimeoutException: Message: &#10;Stacktrace:&#10;#0 0x556aa9d6df93 &lt;unknown&gt;&#10;#1 0x556aa9848908 &lt;unknown&gt;&#10;#2 0x556aa987e66a &lt;unknown&gt;&#10;#3 0x556aa98b0ff4 &lt;unknown&gt;&#10;#4 0x556aa989baad &lt;unknown&gt;&#10;#5 0x556aa98aec91 &lt;unknown&gt;&#10;#6 0x556aa989b973 &lt;unknown&gt;&#10;#7 0x556aa9871df4 &lt;unknown&gt;&#10;#8 0x556aa9872de5 &lt;unknown&gt;&#10;#9 0x556aa9d9d2be &lt;unknown&gt;&#10;#10 0x556aa9db2ba0 &lt;unknown&gt;&#10;#11 0x556aa9d9e215 &lt;unknown&gt;&#10;#12 0x556aa9db3fe8 &lt;unknown&gt;&#10;#13 0x556aa9d929db &lt;unknown&gt;&#10;#14 0x556aa9dcf218 &lt;unknown&gt;&#10;#15 0x556aa9dcf398 &lt;unknown&gt;&#10;#16 0x556aa9dea6cd &lt;unknown&gt;&#10;#17 0x7f8b22b99609 &lt;unknown&gt;&quot;">web_driver = &lt;selenium.webdriver.remote.webdriver.WebDriver (session="b5688be7284107006bd2b2f413b53f9c")&gt;
github_dashboard_page = &lt;pages.github_pages.dashboard.github_dashboard_page.GitHubDashboardPage object at 0x7feac769cee0&gt;
github_confirm_password_page = &lt;pages.github_pages.repository.settings.github_confirm_password_page.GitHubConfirmPasswordPage object at 0x7feac769cfd0&gt;

    @pytest.fixture(scope="class")
    def delete_all_repos_before_class(web_driver, github_dashboard_page, github_confirm_password_page):
&gt;       delete_all_repos_on_dashboard(web_driver, github_dashboard_page, github_confirm_password_page)

tests/conftest.py:170: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:154: in delete_all_repos_on_dashboard
    github_dashboard_page.repositories_list.click_first_repo_on_repositories() \
utilities/logger/test_logger/test_step.py:28: in impl
    params = func(*args, **kw)
pages/github_pages/repository/github_repo_main_page.py:46: in click_settings_tab
    self.settings_tab().click()
utilities/logger/test_logger/test_step.py:28: in impl
    params = func(*args, **kw)
pages/github_pages/repository/github_repo_main_page.py:42: in settings_tab
    return self._wait_for_visible_element(self.SETTINGS_TAB, 10)
pages/base_page.py:16: in _wait_for_visible_element
    return WebDriverWait(self.driver, time_seconds).until(EC.visibility_of_element_located(by_locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="b5688be7284107006bd2b2f413b53f9c")&gt;
method = &lt;function visibility_of_element_located.&lt;locals&gt;._predicate at 0x7feac76e8790&gt;
message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
        return value does not evaluate to ``False``.
    
        :param method: callable(WebDriver)
        :param message: optional message for :exc:`TimeoutException`
        :returns: the result of the last call to `method`
        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs
        """
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except InvalidSelectorException as e:
                raise e
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x556aa9d6df93 &lt;unknown&gt;
E       #1 0x556aa9848908 &lt;unknown&gt;
E       #2 0x556aa987e66a &lt;unknown&gt;
E       #3 0x556aa98b0ff4 &lt;unknown&gt;
E       #4 0x556aa989baad &lt;unknown&gt;
E       #5 0x556aa98aec91 &lt;unknown&gt;
E       #6 0x556aa989b973 &lt;unknown&gt;
E       #7 0x556aa9871df4 &lt;unknown&gt;
E       #8 0x556aa9872de5 &lt;unknown&gt;
E       #9 0x556aa9d9d2be &lt;unknown&gt;
E       #10 0x556aa9db2ba0 &lt;unknown&gt;
E       #11 0x556aa9d9e215 &lt;unknown&gt;
E       #12 0x556aa9db3fe8 &lt;unknown&gt;
E       #13 0x556aa9d929db &lt;unknown&gt;
E       #14 0x556aa9dcf218 &lt;unknown&gt;
E       #15 0x556aa9dcf398 &lt;unknown&gt;
E       #16 0x556aa9dea6cd &lt;unknown&gt;
E       #17 0x7f8b22b99609 &lt;unknown&gt;

../../../.local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:89: TimeoutException</error></testcase><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_find_repo_by_partial_name_not_match" time="3.754"><error message="failed on setup with &quot;selenium.common.exceptions.TimeoutException: Message: &#10;Stacktrace:&#10;#0 0x556aa9d6df93 &lt;unknown&gt;&#10;#1 0x556aa9848908 &lt;unknown&gt;&#10;#2 0x556aa987e66a &lt;unknown&gt;&#10;#3 0x556aa98b0ff4 &lt;unknown&gt;&#10;#4 0x556aa989baad &lt;unknown&gt;&#10;#5 0x556aa98aec91 &lt;unknown&gt;&#10;#6 0x556aa989b973 &lt;unknown&gt;&#10;#7 0x556aa9871df4 &lt;unknown&gt;&#10;#8 0x556aa9872de5 &lt;unknown&gt;&#10;#9 0x556aa9d9d2be &lt;unknown&gt;&#10;#10 0x556aa9db2ba0 &lt;unknown&gt;&#10;#11 0x556aa9d9e215 &lt;unknown&gt;&#10;#12 0x556aa9db3fe8 &lt;unknown&gt;&#10;#13 0x556aa9d929db &lt;unknown&gt;&#10;#14 0x556aa9dcf218 &lt;unknown&gt;&#10;#15 0x556aa9dcf398 &lt;unknown&gt;&#10;#16 0x556aa9dea6cd &lt;unknown&gt;&#10;#17 0x7f8b22b99609 &lt;unknown&gt;&quot;">web_driver = &lt;selenium.webdriver.remote.webdriver.WebDriver (session="b5688be7284107006bd2b2f413b53f9c")&gt;
github_dashboard_page = &lt;pages.github_pages.dashboard.github_dashboard_page.GitHubDashboardPage object at 0x7feac769cee0&gt;
github_confirm_password_page = &lt;pages.github_pages.repository.settings.github_confirm_password_page.GitHubConfirmPasswordPage object at 0x7feac769cfd0&gt;

    @pytest.fixture(scope="class")
    def delete_all_repos_before_class(web_driver, github_dashboard_page, github_confirm_password_page):
&gt;       delete_all_repos_on_dashboard(web_driver, github_dashboard_page, github_confirm_password_page)

tests/conftest.py:170: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:154: in delete_all_repos_on_dashboard
    github_dashboard_page.repositories_list.click_first_repo_on_repositories() \
utilities/logger/test_logger/test_step.py:28: in impl
    params = func(*args, **kw)
pages/github_pages/repository/github_repo_main_page.py:46: in click_settings_tab
    self.settings_tab().click()
utilities/logger/test_logger/test_step.py:28: in impl
    params = func(*args, **kw)
pages/github_pages/repository/github_repo_main_page.py:42: in settings_tab
    return self._wait_for_visible_element(self.SETTINGS_TAB, 10)
pages/base_page.py:16: in _wait_for_visible_element
    return WebDriverWait(self.driver, time_seconds).until(EC.visibility_of_element_located(by_locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="b5688be7284107006bd2b2f413b53f9c")&gt;
method = &lt;function visibility_of_element_located.&lt;locals&gt;._predicate at 0x7feac76e8790&gt;
message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
        return value does not evaluate to ``False``.
    
        :param method: callable(WebDriver)
        :param message: optional message for :exc:`TimeoutException`
        :returns: the result of the last call to `method`
        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs
        """
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except InvalidSelectorException as e:
                raise e
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x556aa9d6df93 &lt;unknown&gt;
E       #1 0x556aa9848908 &lt;unknown&gt;
E       #2 0x556aa987e66a &lt;unknown&gt;
E       #3 0x556aa98b0ff4 &lt;unknown&gt;
E       #4 0x556aa989baad &lt;unknown&gt;
E       #5 0x556aa98aec91 &lt;unknown&gt;
E       #6 0x556aa989b973 &lt;unknown&gt;
E       #7 0x556aa9871df4 &lt;unknown&gt;
E       #8 0x556aa9872de5 &lt;unknown&gt;
E       #9 0x556aa9d9d2be &lt;unknown&gt;
E       #10 0x556aa9db2ba0 &lt;unknown&gt;
E       #11 0x556aa9d9e215 &lt;unknown&gt;
E       #12 0x556aa9db3fe8 &lt;unknown&gt;
E       #13 0x556aa9d929db &lt;unknown&gt;
E       #14 0x556aa9dcf218 &lt;unknown&gt;
E       #15 0x556aa9dcf398 &lt;unknown&gt;
E       #16 0x556aa9dea6cd &lt;unknown&gt;
E       #17 0x7f8b22b99609 &lt;unknown&gt;

../../../.local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:89: TimeoutException</error></testcase></testsuite></testsuites>