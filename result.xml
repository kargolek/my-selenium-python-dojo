<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="1" failures="0" skipped="0" tests="33" time="472.976" timestamp="2021-12-07T01:46:11.642252" hostname="fv-az39-470"><testcase classname="tests.test_github.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_name_author_should_match" time="15.467" /><testcase classname="tests.test_github.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_should_match_public_as_default" time="6.224" /><testcase classname="tests.test_github.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_should_match_clone_default_url" time="4.967" /><testcase classname="tests.test_github.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_should_match_readme_file" time="8.722" /><testcase classname="tests.test_github.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_should_match_gitignore" time="8.879" /><testcase classname="tests.test_github.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_should_match_license_file" time="9.108" /><testcase classname="tests.test_github.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_should_match_privacy_private" time="7.630" /><testcase classname="tests.test_github.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_should_not_create_if_name_exist" time="6.086" /><testcase classname="tests.test_github.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_should_description_match" time="8.726" /><testcase classname="tests.test_github.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_should_open_import_repo_page" time="0.786" /><testcase classname="tests.test_github.github_create_repo_test.TestGitHubCreateRepo" name="test_input_name_should_indicate_name_with_white_spaces" time="1.097" /><testcase classname="tests.test_github.github_create_repo_test.TestGitHubCreateRepo" name="test_input_name_should_indicate_name_with_special_char" time="1.174" /><testcase classname="tests.test_github.github_create_repo_test.TestGitHubCreateRepo" name="test_input_name_by_click_inspiration_name" time="0.618" /><testcase classname="tests.test_github.github_create_repo_test.TestGitHubCreateRepo" name="test_should_throw_notification_for_repo_creation_failed" time="8.523" /><testcase classname="tests.test_github.github_create_repo_test.TestGitHubCreateRepo" name="test_should_open_readme_learn_more" time="1.133" /><testcase classname="tests.test_github.github_create_repo_test.TestGitHubCreateRepo" name="test_should_open_gitignore_learn_more" time="0.996" /><testcase classname="tests.test_github.github_create_repo_test.TestGitHubCreateRepo" name="test_should_open_license_learn_more" time="1.056" /><testcase classname="tests.test_github.github_create_repo_test.TestGitHubCreateRepo" name="test_should_open_repo_settings" time="1.152" /><testcase classname="tests.test_github.github_dashoboard_test.TestGitHubDashboard" name="test_is_git_repo_list_available" time="6.720" /><testcase classname="tests.test_github.github_dashoboard_test.TestGitHubDashboard" name="test_should_open_create_new_repo" time="2.279" /><testcase classname="tests.test_github.github_dashoboard_test.TestGitHubDashboard" name="test_should_open_create_new_repo_when_repo_exist" time="2.444" /><testcase classname="tests.test_github.github_dashoboard_test.TestGitHubDashboard" name="test_should_open_import_repo_page" time="2.401" /><testcase classname="tests.test_github.github_dashoboard_test.TestGitHubDashboard" name="test_should_open_hello_world_read_guide_page" time="1.160" /><testcase classname="tests.test_github.github_dashoboard_test.TestGitHubDashboard" name="test_should_create_repo_form_introduce_yourself_activity" time="6.573" /><testcase classname="tests.test_github.github_dashoboard_test.TestGitHubDashboard" name="test_open_explore_repos_dashboard_page" time="1.284" /><testcase classname="tests.test_github.github_dashoboard_test.TestGitHubDashboard" name="test_find_repo_by_exact_name_one_match" time="5.185" /><testcase classname="tests.test_github.github_dashoboard_test.TestGitHubDashboard" name="test_find_repo_by_partial_name_one_match" time="1.729" /><testcase classname="tests.test_github.github_dashoboard_test.TestGitHubDashboard" name="test_find_repo_by_partial_name_multi_match" time="1.172" /><testcase classname="tests.test_github.github_dashoboard_test.TestGitHubDashboard" name="test_find_repo_by_partial_name_not_match" time="1.721" /><testcase classname="tests.test_github.github_dashoboard_test.TestGitHubDashboard" name="test_start_a_project_should_open_new_repo_page" time="0.969" /><testcase classname="tests.test_github.github_login_in_test.TestGitHubLoginIn" name="test_login_in_username_positive" time="324.348" /><testcase classname="tests.test_github.github_login_in_test.TestGitHubLoginIn" name="test_login_in_email_positive" time="14.361" /><testcase classname="pytest" name="internal" time="0.000"><error message="internal error">Traceback (most recent call last):
  File "/home/runner/.local/lib/python3.8/site-packages/_pytest/main.py", line 269, in wrap_session
    session.exitstatus = doit(config, session) or 0
  File "/home/runner/.local/lib/python3.8/site-packages/_pytest/main.py", line 323, in _main
    config.hook.pytest_runtestloop(session=session)
  File "/home/runner/.local/lib/python3.8/site-packages/pluggy/_hooks.py", line 265, in __call__
    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)
  File "/home/runner/.local/lib/python3.8/site-packages/pluggy/_manager.py", line 80, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/home/runner/.local/lib/python3.8/site-packages/pluggy/_callers.py", line 60, in _multicall
    return outcome.get_result()
  File "/home/runner/.local/lib/python3.8/site-packages/pluggy/_result.py", line 60, in get_result
    raise ex[1].with_traceback(ex[2])
  File "/home/runner/.local/lib/python3.8/site-packages/pluggy/_callers.py", line 39, in _multicall
    res = hook_impl.function(*args)
  File "/home/runner/.local/lib/python3.8/site-packages/_pytest/main.py", line 348, in pytest_runtestloop
    item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)
  File "/home/runner/.local/lib/python3.8/site-packages/pluggy/_hooks.py", line 265, in __call__
    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)
  File "/home/runner/.local/lib/python3.8/site-packages/pluggy/_manager.py", line 80, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/home/runner/.local/lib/python3.8/site-packages/pluggy/_callers.py", line 60, in _multicall
    return outcome.get_result()
  File "/home/runner/.local/lib/python3.8/site-packages/pluggy/_result.py", line 60, in get_result
    raise ex[1].with_traceback(ex[2])
  File "/home/runner/.local/lib/python3.8/site-packages/pluggy/_callers.py", line 39, in _multicall
    res = hook_impl.function(*args)
  File "/home/runner/.local/lib/python3.8/site-packages/pytest_rerunfailures.py", line 497, in pytest_runtest_protocol
    reports = runtestprotocol(item, nextitem=nextitem, log=False)
  File "/home/runner/.local/lib/python3.8/site-packages/_pytest/runner.py", line 126, in runtestprotocol
    reports.append(call_and_report(item, "call", log))
  File "/home/runner/.local/lib/python3.8/site-packages/_pytest/runner.py", line 217, in call_and_report
    report: TestReport = hook.pytest_runtest_makereport(item=item, call=call)
  File "/home/runner/.local/lib/python3.8/site-packages/pluggy/_hooks.py", line 265, in __call__
    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)
  File "/home/runner/.local/lib/python3.8/site-packages/pluggy/_manager.py", line 80, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
  File "/home/runner/.local/lib/python3.8/site-packages/pluggy/_callers.py", line 55, in _multicall
    gen.send(outcome)
  File "/home/runner/work/my-selenium-python-dojo/my-selenium-python-dojo/tests/conftest.py", line 68, in pytest_runtest_makereport
    driver.get_screenshot_as_file(get_screenshot_dir() + test_name)
  File "/home/runner/.local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py", line 1317, in get_screenshot_as_file
    png = self.get_screenshot_as_png()
  File "/home/runner/.local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py", line 1353, in get_screenshot_as_png
    return b64decode(self.get_screenshot_as_base64().encode('ascii'))
  File "/home/runner/.local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py", line 1365, in get_screenshot_as_base64
    return self.execute(Command.SCREENSHOT)['value']
  File "/home/runner/.local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py", line 424, in execute
    self.error_handler.check_response(response)
  File "/home/runner/.local/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py", line 247, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.WebDriverException: Message: Unable to execute request for an existing session: Unable to find session with ID: 9a95151e80ac3918c4e178c3ffb8dbfb
Build info: version: '4.1.0', revision: 'aea69daa1c'
System info: host: 'b2485965a9f5', ip: '172.18.0.2', os.name: 'Linux', os.arch: 'amd64', os.version: '5.11.0-1021-azure', java.version: '11.0.11'
Driver info: driver.version: unknown</error></testcase></testsuite></testsuites>