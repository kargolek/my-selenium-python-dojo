<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="4" failures="1" skipped="0" tests="20" time="204.884" timestamp="2021-11-11T17:12:07.135514" hostname="fv-az74-755"><testcase classname="tests.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_name_author_should_match" time="13.687" /><testcase classname="tests.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_should_match_public_as_default" time="3.109" /><testcase classname="tests.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_should_match_clone_default_url" time="3.235" /><testcase classname="tests.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_should_match_license_file" time="7.507" /><testcase classname="tests.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_should_match_readme_file" time="6.425" /><testcase classname="tests.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_should_match_gitignore" time="8.415" /><testcase classname="tests.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_should_match_privacy_private" time="5.966" /><testcase classname="tests.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_should_not_create_if_name_exist" time="4.435" /><testcase classname="tests.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_should_description_match" time="6.607" /><testcase classname="tests.github_create_repo_test.TestGitHubCreateRepo" name="test_create_repo_should_open_import_repo_page" time="1.099" /><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_is_git_repo_list_available" time="1.173" /><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_should_open_create_new_repo" time="80.679"><failure message="AttributeError: 'GitHubCreateNewRepoPage' object has no attribute 'get_repo_name_input'">self = &lt;tests.github_dashoboard_test.TestGitHubDashboard object at 0x7fdc8d92f2b0&gt;
web_driver = &lt;selenium.webdriver.remote.webdriver.WebDriver (session="e18356b77a129bdea435358fb3f9261c")&gt;
github_dashboard_page = &lt;pages.github_pages.dashboard.github_dashboard_page.GitHubDashboardPage object at 0x7fdc8d8f2d00&gt;
delete_all_repos = None

    def test_should_open_create_new_repo(self, web_driver, github_dashboard_page, delete_all_repos):
&gt;       create_repo_button = github_dashboard_page.open_url() \
            .repositories_list.click_create_repository() \
            .get_repo_name_input()
E       AttributeError: 'GitHubCreateNewRepoPage' object has no attribute 'get_repo_name_input'

tests/github_dashoboard_test.py:15: AttributeError</failure></testcase><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_should_open_import_repo_page" time="5.284" /><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_should_open_hello_world_read_guide_page" time="1.935" /><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_should_create_repo_form_introduce_yourself_activity" time="10.043" /><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_open_explore_repos_dashboard_page" time="1.948" /><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_find_repo_by_exact_name_one_match" time="20.440"><error message="failed on setup with &quot;selenium.common.exceptions.TimeoutException: Message: &#10;Stacktrace:&#10;#0 0x564eb712ef93 &lt;unknown&gt;&#10;#1 0x564eb6c09908 &lt;unknown&gt;&#10;#2 0x564eb6c3f66a &lt;unknown&gt;&#10;#3 0x564eb6c71ff4 &lt;unknown&gt;&#10;#4 0x564eb6c5caad &lt;unknown&gt;&#10;#5 0x564eb6c6fc91 &lt;unknown&gt;&#10;#6 0x564eb6c5c973 &lt;unknown&gt;&#10;#7 0x564eb6c32df4 &lt;unknown&gt;&#10;#8 0x564eb6c33de5 &lt;unknown&gt;&#10;#9 0x564eb715e2be &lt;unknown&gt;&#10;#10 0x564eb7173ba0 &lt;unknown&gt;&#10;#11 0x564eb715f215 &lt;unknown&gt;&#10;#12 0x564eb7174fe8 &lt;unknown&gt;&#10;#13 0x564eb71539db &lt;unknown&gt;&#10;#14 0x564eb7190218 &lt;unknown&gt;&#10;#15 0x564eb7190398 &lt;unknown&gt;&#10;#16 0x564eb71ab6cd &lt;unknown&gt;&#10;#17 0x7f57096d8609 &lt;unknown&gt;&quot;">web_driver = &lt;selenium.webdriver.remote.webdriver.WebDriver (session="e18356b77a129bdea435358fb3f9261c")&gt;
github_dashboard_page = &lt;pages.github_pages.dashboard.github_dashboard_page.GitHubDashboardPage object at 0x7fdc8d8f2d00&gt;
github_confirm_password_page = &lt;pages.github_pages.repository.settings.github_confirm_password_page.GitHubConfirmPasswordPage object at 0x7fdc8d8f2b20&gt;

    @pytest.fixture()
    def delete_all_repos(web_driver, github_dashboard_page, github_confirm_password_page):
&gt;       delete_all_repos_on_dashboard(web_driver, github_dashboard_page, github_confirm_password_page)

tests/conftest.py:165: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:154: in delete_all_repos_on_dashboard
    github_dashboard_page.repositories_list.click_first_repo_on_repositories() \
utilities/logger/test_logger/test_step.py:28: in impl
    params = func(*args, **kw)
pages/github_pages/repository/github_repo_main_page.py:44: in click_settings_tab
    self.settings_tab().click()
utilities/logger/test_logger/test_step.py:28: in impl
    params = func(*args, **kw)
pages/github_pages/repository/github_repo_main_page.py:40: in settings_tab
    return self._wait_for_visible_element(self.SETTINGS_TAB, 10)
pages/base_page.py:16: in _wait_for_visible_element
    return WebDriverWait(self.driver, time_seconds).until(EC.visibility_of_element_located(by_locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="e18356b77a129bdea435358fb3f9261c")&gt;
method = &lt;function visibility_of_element_located.&lt;locals&gt;._predicate at 0x7fdc8d898040&gt;
message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
        return value does not evaluate to ``False``.
    
        :param method: callable(WebDriver)
        :param message: optional message for :exc:`TimeoutException`
        :returns: the result of the last call to `method`
        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs
        """
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except InvalidSelectorException as e:
                raise e
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x564eb712ef93 &lt;unknown&gt;
E       #1 0x564eb6c09908 &lt;unknown&gt;
E       #2 0x564eb6c3f66a &lt;unknown&gt;
E       #3 0x564eb6c71ff4 &lt;unknown&gt;
E       #4 0x564eb6c5caad &lt;unknown&gt;
E       #5 0x564eb6c6fc91 &lt;unknown&gt;
E       #6 0x564eb6c5c973 &lt;unknown&gt;
E       #7 0x564eb6c32df4 &lt;unknown&gt;
E       #8 0x564eb6c33de5 &lt;unknown&gt;
E       #9 0x564eb715e2be &lt;unknown&gt;
E       #10 0x564eb7173ba0 &lt;unknown&gt;
E       #11 0x564eb715f215 &lt;unknown&gt;
E       #12 0x564eb7174fe8 &lt;unknown&gt;
E       #13 0x564eb71539db &lt;unknown&gt;
E       #14 0x564eb7190218 &lt;unknown&gt;
E       #15 0x564eb7190398 &lt;unknown&gt;
E       #16 0x564eb71ab6cd &lt;unknown&gt;
E       #17 0x7f57096d8609 &lt;unknown&gt;

../../../.local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:89: TimeoutException</error></testcase><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_find_repo_by_partial_name_one_match" time="5.434"><error message="failed on setup with &quot;AttributeError: 'GitHubCreateNewRepoPage' object has no attribute 'input_repo_name'&quot;">web_driver = &lt;selenium.webdriver.remote.webdriver.WebDriver (session="e18356b77a129bdea435358fb3f9261c")&gt;
github_dashboard_page = &lt;pages.github_pages.dashboard.github_dashboard_page.GitHubDashboardPage object at 0x7fdc8d8f2d00&gt;
delete_all_repos = None

    @pytest.fixture()
    def create_repos_test_1_and_test_2(web_driver, github_dashboard_page, delete_all_repos):
        for i in range(1, 3):
&gt;           github_dashboard_page.open_url() \
                .repositories_list \
                .click_create_repository() \
                .input_repo_name(f"test_{i}") \
                .click_create_repository_button().settings_tab()
E           AttributeError: 'GitHubCreateNewRepoPage' object has no attribute 'input_repo_name'

tests/conftest.py:188: AttributeError</error></testcase><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_find_repo_by_partial_name_multi_match" time="5.192"><error message="failed on setup with &quot;AttributeError: 'GitHubCreateNewRepoPage' object has no attribute 'input_repo_name'&quot;">web_driver = &lt;selenium.webdriver.remote.webdriver.WebDriver (session="e18356b77a129bdea435358fb3f9261c")&gt;
github_dashboard_page = &lt;pages.github_pages.dashboard.github_dashboard_page.GitHubDashboardPage object at 0x7fdc8d8f2d00&gt;
delete_all_repos = None

    @pytest.fixture()
    def create_repos_test_1_and_test_2(web_driver, github_dashboard_page, delete_all_repos):
        for i in range(1, 3):
&gt;           github_dashboard_page.open_url() \
                .repositories_list \
                .click_create_repository() \
                .input_repo_name(f"test_{i}") \
                .click_create_repository_button().settings_tab()
E           AttributeError: 'GitHubCreateNewRepoPage' object has no attribute 'input_repo_name'

tests/conftest.py:188: AttributeError</error></testcase><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_find_repo_by_partial_name_not_match" time="9.168"><error message="failed on setup with &quot;AttributeError: 'GitHubCreateNewRepoPage' object has no attribute 'input_repo_name'&quot;">web_driver = &lt;selenium.webdriver.remote.webdriver.WebDriver (session="e18356b77a129bdea435358fb3f9261c")&gt;
github_dashboard_page = &lt;pages.github_pages.dashboard.github_dashboard_page.GitHubDashboardPage object at 0x7fdc8d8f2d00&gt;
delete_all_repos = None

    @pytest.fixture()
    def create_repos_test_1_and_test_2(web_driver, github_dashboard_page, delete_all_repos):
        for i in range(1, 3):
&gt;           github_dashboard_page.open_url() \
                .repositories_list \
                .click_create_repository() \
                .input_repo_name(f"test_{i}") \
                .click_create_repository_button().settings_tab()
E           AttributeError: 'GitHubCreateNewRepoPage' object has no attribute 'input_repo_name'

tests/conftest.py:188: AttributeError</error></testcase></testsuite></testsuites>