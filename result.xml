<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="3" skipped="0" tests="7" time="84.973" timestamp="2021-11-08T23:09:40.045154" hostname="fv-az39-661"><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_is_git_repo_list_available" time="11.856" /><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_should_open_create_new_repo" time="4.964" /><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_should_open_import_repo_page" time="5.017" /><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_should_open_hello_world_page" time="1.224" /><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_should_create_repo_form_introduce_yourself_activity" time="19.654"><failure message="selenium.common.exceptions.TimeoutException: Message: &#10;Stacktrace:&#10;#0 0x556f2025cf93 &lt;unknown&gt;&#10;#1 0x556f1fd37908 &lt;unknown&gt;&#10;#2 0x556f1fd6d66a &lt;unknown&gt;&#10;#3 0x556f1fd9fff4 &lt;unknown&gt;&#10;#4 0x556f1fd8aaad &lt;unknown&gt;&#10;#5 0x556f1fd9dc91 &lt;unknown&gt;&#10;#6 0x556f1fd8a973 &lt;unknown&gt;&#10;#7 0x556f1fd60df4 &lt;unknown&gt;&#10;#8 0x556f1fd61de5 &lt;unknown&gt;&#10;#9 0x556f2028c2be &lt;unknown&gt;&#10;#10 0x556f202a1ba0 &lt;unknown&gt;&#10;#11 0x556f2028d215 &lt;unknown&gt;&#10;#12 0x556f202a2fe8 &lt;unknown&gt;&#10;#13 0x556f202819db &lt;unknown&gt;&#10;#14 0x556f202be218 &lt;unknown&gt;&#10;#15 0x556f202be398 &lt;unknown&gt;&#10;#16 0x556f202d96cd &lt;unknown&gt;&#10;#17 0x7f356c3e7609 &lt;unknown&gt;">self = &lt;tests.github_dashoboard_test.TestGitHubDashboard object at 0x7fb2bee83b80&gt;
web_driver = &lt;selenium.webdriver.remote.webdriver.WebDriver (session="33b73bae1cdc6cd0e3b0a0734839e0d0")&gt;
github_dashboard_page = &lt;pages.github_pages.dashboard.github_dashboard_page.GitHubDashboardPage object at 0x7fb2beeebdc0&gt;
delete_all_repos = None

    def test_should_create_repo_form_introduce_yourself_activity(self, web_driver, github_dashboard_page,
                                                                 delete_all_repos):
        github_dashboard_page.click_continue_yourself_button() \
            .click_commit_new_file_button() \
            .get_file_web_element_by_file_name("README.md")
        # repo = github_dashboard_page.open_url() \
        #     .repositories_list \
        #     .get_repo_by_name(Secrets.USERNAME, Secrets.USERNAME)
        # assert_that(repo, not_none())
    
&gt;       github_dashboard_page.open_url() \
            .repositories_list \
            .get_repo_by_name(Secrets.USERNAME, Secrets.USERNAME)

tests/github_dashoboard_test.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pages/github_pages/dashboard/repository_dashboard/repositories_page.py:29: in get_repo_by_name
    return super()._wait_for_visible_element(
pages/base_page.py:16: in _wait_for_visible_element
    return WebDriverWait(self.driver, time_seconds).until(EC.visibility_of_element_located(by_locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="33b73bae1cdc6cd0e3b0a0734839e0d0")&gt;
method = &lt;function visibility_of_element_located.&lt;locals&gt;._predicate at 0x7fb2bef4b700&gt;
message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
        return value does not evaluate to ``False``.
    
        :param method: callable(WebDriver)
        :param message: optional message for :exc:`TimeoutException`
        :returns: the result of the last call to `method`
        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs
        """
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except InvalidSelectorException as e:
                raise e
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x556f2025cf93 &lt;unknown&gt;
E       #1 0x556f1fd37908 &lt;unknown&gt;
E       #2 0x556f1fd6d66a &lt;unknown&gt;
E       #3 0x556f1fd9fff4 &lt;unknown&gt;
E       #4 0x556f1fd8aaad &lt;unknown&gt;
E       #5 0x556f1fd9dc91 &lt;unknown&gt;
E       #6 0x556f1fd8a973 &lt;unknown&gt;
E       #7 0x556f1fd60df4 &lt;unknown&gt;
E       #8 0x556f1fd61de5 &lt;unknown&gt;
E       #9 0x556f2028c2be &lt;unknown&gt;
E       #10 0x556f202a1ba0 &lt;unknown&gt;
E       #11 0x556f2028d215 &lt;unknown&gt;
E       #12 0x556f202a2fe8 &lt;unknown&gt;
E       #13 0x556f202819db &lt;unknown&gt;
E       #14 0x556f202be218 &lt;unknown&gt;
E       #15 0x556f202be398 &lt;unknown&gt;
E       #16 0x556f202d96cd &lt;unknown&gt;
E       #17 0x7f356c3e7609 &lt;unknown&gt;

../../../.local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:89: TimeoutException</failure></testcase><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_open_explore_repo_from_the_list" time="13.560"><failure message="selenium.common.exceptions.TimeoutException: Message:">self = &lt;tests.github_dashoboard_test.TestGitHubDashboard object at 0x7fb2bedde490&gt;
web_driver = &lt;selenium.webdriver.remote.webdriver.WebDriver (session="33b73bae1cdc6cd0e3b0a0734839e0d0")&gt;
github_dashboard_page = &lt;pages.github_pages.dashboard.github_dashboard_page.GitHubDashboardPage object at 0x7fb2beeebdc0&gt;
search_and_open_repo = None

    def test_open_explore_repo_from_the_list(self, web_driver, github_dashboard_page, search_and_open_repo):
&gt;       repo_page = github_dashboard_page.open_url() \
            .explore_repos_page \
            .click_first_explore_repo_item()

tests/github_dashoboard_test.py:54: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pages/github_pages/dashboard/repository_dashboard/explore_repos_page.py:18: in click_first_explore_repo_item
    super()._wait_for_all_elements_visible(self.REPOSITORIES_ITEMS, 10)[0].click()
pages/base_page.py:40: in _wait_for_all_elements_visible
    return WebDriverWait(self.driver, time_seconds).until(EC.visibility_of_all_elements_located(by_locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="33b73bae1cdc6cd0e3b0a0734839e0d0")&gt;
method = &lt;function visibility_of_all_elements_located.&lt;locals&gt;._predicate at 0x7fb2bef4bc10&gt;
message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
        return value does not evaluate to ``False``.
    
        :param method: callable(WebDriver)
        :param message: optional message for :exc:`TimeoutException`
        :returns: the result of the last call to `method`
        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs
        """
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except InvalidSelectorException as e:
                raise e
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message:

../../../.local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:89: TimeoutException</failure></testcase><testcase classname="tests.github_dashoboard_test.TestGitHubDashboard" name="test_open_explore_repos_dashboard_page" time="27.477"><failure message="selenium.common.exceptions.TimeoutException: Message: &#10;Stacktrace:&#10;#0 0x556f2025cf93 &lt;unknown&gt;&#10;#1 0x556f1fd37908 &lt;unknown&gt;&#10;#2 0x556f1fd6d66a &lt;unknown&gt;&#10;#3 0x556f1fd9fff4 &lt;unknown&gt;&#10;#4 0x556f1fd8aaad &lt;unknown&gt;&#10;#5 0x556f1fd9dc91 &lt;unknown&gt;&#10;#6 0x556f1fd8a973 &lt;unknown&gt;&#10;#7 0x556f1fd60df4 &lt;unknown&gt;&#10;#8 0x556f1fd61de5 &lt;unknown&gt;&#10;#9 0x556f2028c2be &lt;unknown&gt;&#10;#10 0x556f202a1ba0 &lt;unknown&gt;&#10;#11 0x556f2028d215 &lt;unknown&gt;&#10;#12 0x556f202a2fe8 &lt;unknown&gt;&#10;#13 0x556f202819db &lt;unknown&gt;&#10;#14 0x556f202be218 &lt;unknown&gt;&#10;#15 0x556f202be398 &lt;unknown&gt;&#10;#16 0x556f202d96cd &lt;unknown&gt;&#10;#17 0x7f356c3e7609 &lt;unknown&gt;">self = &lt;tests.github_dashoboard_test.TestGitHubDashboard object at 0x7fb2bedecfa0&gt;
web_driver = &lt;selenium.webdriver.remote.webdriver.WebDriver (session="33b73bae1cdc6cd0e3b0a0734839e0d0")&gt;
github_dashboard_page = &lt;pages.github_pages.dashboard.github_dashboard_page.GitHubDashboardPage object at 0x7fb2beeebdc0&gt;
search_and_open_repo = None

    def test_open_explore_repos_dashboard_page(self, web_driver, github_dashboard_page, search_and_open_repo):
&gt;       explore_dashboard_page = github_dashboard_page.open_url() \
            .explore_repos_page \
            .click_explore_more()

tests/github_dashoboard_test.py:60: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
pages/github_pages/dashboard/repository_dashboard/explore_repos_page.py:22: in click_explore_more
    super()._wait_for_visible_element(self.EXPLORE_MORE_BUTTON, 10).click()
pages/base_page.py:16: in _wait_for_visible_element
    return WebDriverWait(self.driver, time_seconds).until(EC.visibility_of_element_located(by_locator))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="33b73bae1cdc6cd0e3b0a0734839e0d0")&gt;
method = &lt;function visibility_of_element_located.&lt;locals&gt;._predicate at 0x7fb2bef44430&gt;
message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
        return value does not evaluate to ``False``.
    
        :param method: callable(WebDriver)
        :param message: optional message for :exc:`TimeoutException`
        :returns: the result of the last call to `method`
        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs
        """
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except InvalidSelectorException as e:
                raise e
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       #0 0x556f2025cf93 &lt;unknown&gt;
E       #1 0x556f1fd37908 &lt;unknown&gt;
E       #2 0x556f1fd6d66a &lt;unknown&gt;
E       #3 0x556f1fd9fff4 &lt;unknown&gt;
E       #4 0x556f1fd8aaad &lt;unknown&gt;
E       #5 0x556f1fd9dc91 &lt;unknown&gt;
E       #6 0x556f1fd8a973 &lt;unknown&gt;
E       #7 0x556f1fd60df4 &lt;unknown&gt;
E       #8 0x556f1fd61de5 &lt;unknown&gt;
E       #9 0x556f2028c2be &lt;unknown&gt;
E       #10 0x556f202a1ba0 &lt;unknown&gt;
E       #11 0x556f2028d215 &lt;unknown&gt;
E       #12 0x556f202a2fe8 &lt;unknown&gt;
E       #13 0x556f202819db &lt;unknown&gt;
E       #14 0x556f202be218 &lt;unknown&gt;
E       #15 0x556f202be398 &lt;unknown&gt;
E       #16 0x556f202d96cd &lt;unknown&gt;
E       #17 0x7f356c3e7609 &lt;unknown&gt;

../../../.local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:89: TimeoutException</failure></testcase></testsuite></testsuites>